
Contains Cells, Rules namespace and Cells collections.

file: States: public struct States:

	int[] values.
	int[] sizes.
	Aranagements arangement.
	
	checks for sizes and values compatability.
	
file: IPopulation: public IPopulation:

	All base and abstract Populations classes inherit.
	
	void Evolve ():
	
		Evolves population according to simple rule.
		
	States GetStates ():
	
		return States structure.
		
	void SetRule (IRule rule):
	
		Sets rule for population.
		setter dependancy
		
	IRule GetRule ():
	
		return rule.
		
	CellsVariety GetCellsVariety ():
	
		return cellsVariety.
		
	new string ToString ():
	
		return type, CellsVariety, IRule as string.
		format "type_Variety_IRule"
		
	IPopulation Clone ():
	
		clone
		
file: Simple: public Simple inherit IPopulation:

	private Length:
	
		get only, returns items.Length
		
	private Simple (CellsVariety cellsVariety, ICell[] items, Rule rule, int[] size, int[] states):
	
		private constructor for Clone () method, passes all instance variables.
	
	public Simple (CellsVariety cellsVariety, int[] size):
		
		SetRule () initialization dependancy.
		public constructor for simple inital conditions.
		this.states from cell constructor out int[] states.
	
	public Simple (CellsVariety cellsVariety, int[] size, int[] values):
		
		public constructor for manual states.
		SetRule () initialization dependancy.
		
	public void Evolve () inherit ICell:  // evolves once
		
		Uses System.Threading.Task.Parallel.For method:
		
			Effectively incompatable with Mono.
			Will compile and run with mono, using normal for loop.
